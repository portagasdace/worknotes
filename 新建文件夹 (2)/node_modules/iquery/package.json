{
  "_args": [
    [
      {
        "raw": "iquery",
        "scope": null,
        "escapedName": "iquery",
        "name": "iquery",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\玉生\\Desktop\\app(1)"
    ]
  ],
  "_from": "iquery@latest",
  "_id": "iquery@0.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/iquery",
  "_npmUser": {
    "name": "jacksontian",
    "email": "shyvo1987@gmail.com"
  },
  "_npmVersion": "1.1.65",
  "_phantomChildren": {},
  "_requested": {
    "raw": "iquery",
    "scope": null,
    "escapedName": "iquery",
    "name": "iquery",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/iquery/-/iquery-0.0.2.tgz",
  "_shasum": "8642098bf773c1922979596006ee943f8f00826d",
  "_shrinkwrap": null,
  "_spec": "iquery",
  "_where": "C:\\Users\\玉生\\Desktop\\app(1)",
  "author": {
    "name": "Jackson Tian"
  },
  "bugs": {
    "url": "https://github.com/JacksonTian/iquery/issues"
  },
  "dependencies": {},
  "description": "Generate your where condition SQL",
  "devDependencies": {
    "jscover": "*",
    "mocha": "*",
    "should": "*"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "8642098bf773c1922979596006ee943f8f00826d",
    "tarball": "https://registry.npmjs.org/iquery/-/iquery-0.0.2.tgz"
  },
  "homepage": "https://github.com/JacksonTian/iquery#readme",
  "keywords": [
    "SQL",
    "WHERE"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jacksontian",
      "email": "shyvo1987@gmail.com"
    }
  ],
  "name": "iquery",
  "optionalDependencies": {},
  "readme": "iQuery [![Build Status](https://travis-ci.org/JacksonTian/iquery.png?branch=master)](https://travis-ci.org/JacksonTian/iquery)\n=====\n## CRUD\n### SELECT\nRequire:\n\n```\nvar select = require('iquery').select;\n```  \nUsage:\n\n```\nselect('a, b, c, d')\n  .from('table')\n  .where('e = f')\n  .groupBy('g')\n  .orderBy('a')\n  .limit(0, 100)\n  .toString();\n// =>\nSELECT a, b, c, d\n  FROM table\n  WHERE e = f\n  GROUP BY g\n  ORDER BY a\n  LIMIT 0, 100\n```\n\n#### select from\n```\nselect('*')\n  .from('table')\n  .toString();\n// OR\nselect()\n  .from('table')\n  .toString();\n// =>\nSELECT * FROM table\n\nselect('a, b, c, d')\n  .from('table')\n  .toString();\n// =>\nSELECT a, b, c, d FROM table\n\nselect(['a', 'b', 'c', 'd'])\n  .from('table')\n  .toString();\n// =>\nSELECT a, b, c, d FROM table\n```\n\n#### where\n```\nselect('*')\n  .from('table')\n  .where('a = b')\n  .toString();\n// =>\nSELECT * FROM table WHERE a = b\n```\n[More where condition]()\n\n#### groupBy\n```\nselect('*')\n  .from('table')\n  .groupBy('c')\n  .toString();\n// =>\nSELECT * FROM table GROUP BY c\n\nselect('*')\n  .from('table')\n  .groupBy('c, d')\n  .toString();\n// =>\nSELECT * FROM table GROUP BY c, d\n```\n\n#### orderBy\n```\nselect('*')\n  .from('table')\n  .orderBy('d DESC')\n  .toString();\n// =>\nSELECT * FROM table ORDER BY d DESC\n```\n[More orderBy case]()\n\n#### limit\n```\nselect('*')\n  .from('table')\n  .limit(100)\n  .toString();\n// =>\nSELECT * FROM table LIMIT 0, 100\n\nselect('*')\n  .from('table')\n  .limit(100, 200)\n  .toString();\n// =>\nSELECT * FROM table LIMIT 100, 200\n```\n\n### Update\nTODO\n### Delete\nTODO\n### Insert\nTODO\n\n## Where/Find\nRequire:\n\n```\nvar Where = require('iquery').Where;\nvar where = new Where();\nvar where = new Where('a = b');\n// a = b\nselect('*').from('table').where(where).toString();\n// =>\nSELECT * FROM table WHERE a = b\n```\n### and\n```\nwhere.and({a: 'b'}).toString();\n// a = :b\nwhere.and({a: 'b', c: 'd'}).toString();\n// a = :b AND c = :d\nwhere.and({a: 'b', c: 'd', e: 'f'}).toString();\n// a = :b AND c = :d AND e = :f\n// Chain\nwhere.and({a: 'b'}).and({c: 'd'}).toString();\n// a = :b AND c = :d\n```\n### or\n```\nwhere.or({a: 'b'}).toString();\n// a = :b\nwhere.or({a: 'b', c: 'd'}).toString();\n// a = :b OR c = :d\nwhere.and({a: 'b', c: 'd', e: 'f'}).toString();\n// a = :b OR c = :d OR e = :f\n// Chain\nwhere.or({a: 'b'}).or({c: 'd'}).toString();\n// a = :b OR c = :d\n```\n### complex\n```\nwhere.and({a: 'b', c: 'd'}).or({e: 'f', g: 'h'}).toString();\n// a = :b AND c = :d OR e = :f OR g = :h\n```\n\n#### a and b or c\n```\nwhere.and({a: 'b', c: 'd'}).or({e: 'f'}).toString();\n// a = :b AND c = :d OR e = :f\n```\n#### a and (b or c)\n__bracket__\n\n```\nwhere.and({a: 'b'}).and(new Where().or({c: 'd', e: 'f'}).bracket()).toString();\n// a = :b AND (c = :d OR e = :f)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/JacksonTian/iquery.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "0.0.2"
}
